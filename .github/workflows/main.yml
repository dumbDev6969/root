name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r backend/requirements.txt
        pip install pytest pytest-cov pytest-asyncio

    - name: Run Tests
      env:
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      run: |
        pytest backend/python/tests/ --cov=backend/python --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Run linters
      run: |
        flake8 backend/python/
        black --check backend/python/
        isort --check-only backend/python/

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install security scanning dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run security checks
      run: |
        bandit -r backend/python/
        safety check

  performance:
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install performance testing dependencies
      run: |
        python -m pip install --upgrade pip
        pip install locust

    - name: Run performance tests
      run: |
        locust --headless -f backend/python/tests/performance/locustfile.py --host http://localhost:10000 --users 100 --spawn-rate 10 --run-time 1m

  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint, security, performance]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install deployment dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r backend/requirements.txt

    - name: Build application
      run: |
        # Add build steps here if needed
        echo "Building application..."

    - name: Deploy
      run: |
        # Add deployment steps here
        echo "Deploying application..."